{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sym\\\\Desktop\\\\mobile\\\\ReduxHooksAtomic-main\\\\ReduxHooksAtomic-main\\\\src\\\\Components\\\\Molecules\\\\EventListItem\\\\index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader'; // import { makeStyles } from \"@mui/styles\";\n\nimport Text from \"../../Atoms/TextField\";\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/material/styles';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from \"../../Atoms/Typography\";\n/* const useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.containerSecondary.dark\r\n        : theme.palette.containerSecondary.light,\r\n    borderRadius: theme.container.secondary.borderRadius,\r\n    padding: theme.container.secondary.padding,\r\n  },\r\n})); */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\n_c = Item;\n\nconst EventListItemComponent = props => {\n  const {\n    eventData,\n    texti,\n    vals\n  } = props; // const style = useStyle();\n\n  return /*#__PURE__*/_jsxDEV(Item, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"140\",\n        image: require(`../../../assets/${eventData.pic}`),\n        alt: \"green iguana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n        title: `Titel : 12`,\n        subheader: `Unterüberschrift : 12`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: eventData.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"h6\",\n          vals: vals,\n          value: \"asdasdas\",\n          texti: texti,\n          color: \"darkGrey\",\n          bold: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Teilen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Mehr erfahren\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}; // class={\"black-opacity\"}\n\n\n_c2 = EventListItemComponent;\nEventListItemComponent.propTypes = {\n  eventData: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n  })\n};\nEventListItemComponent.defaultProps = {};\nexport default EventListItemComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"EventListItemComponent\");","map":{"version":3,"sources":["C:/Users/Sym/Desktop/mobile/ReduxHooksAtomic-main/ReduxHooksAtomic-main/src/Components/Molecules/EventListItem/index.js"],"names":["React","PropTypes","Card","CardContent","CardHeader","Text","Paper","styled","CardActions","CardMedia","Button","Typography","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","EventListItemComponent","props","eventData","texti","vals","maxWidth","require","pic","propTypes","shape","date","string","isRequired","title","type","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n// import { makeStyles } from \"@mui/styles\";\r\nimport Text from \"../../Atoms/TextField\";\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from \"../../Atoms/Typography\";\r\n\r\n/* const useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.containerSecondary.dark\r\n        : theme.palette.containerSecondary.light,\r\n    borderRadius: theme.container.secondary.borderRadius,\r\n    padding: theme.container.secondary.padding,\r\n  },\r\n})); */\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst EventListItemComponent = (props) => {\r\n  const { eventData, texti, vals } = props;\r\n  // const style = useStyle();\r\n\r\n  return (\r\n    <Item><Card sx={{ maxWidth: 345 }} >\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"140\"\r\n        image={require(`../../../assets/${eventData.pic}`)}\r\n        alt=\"green iguana\"\r\n      />\r\n      <CardHeader\r\n        title={`Titel : 12`}\r\n        subheader={`Unterüberschrift : 12`}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {eventData.text}\r\n        </Typography>\r\n        <Text size=\"h6\" vals={vals} value={\"asdasdas\"} texti={texti} color={\"darkGrey\"} bold>\r\n\r\n        </Text>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Teilen</Button>\r\n        <Button size=\"small\">Mehr erfahren</Button>\r\n      </CardActions>\r\n    </Card></Item>\r\n  );\r\n};\r\n// class={\"black-opacity\"}\r\n\r\n\r\nEventListItemComponent.propTypes = {\r\n  eventData: PropTypes.shape({\r\n    date: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nEventListItemComponent.defaultProps = {};\r\n\r\nexport default EventListItemComponent;"]},"metadata":{},"sourceType":"module"}