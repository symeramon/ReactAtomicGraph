{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sym\\\\Desktop\\\\folders\\\\mobile\\\\ReduxHooksAtomic-main\\\\ReduxHooksAtomic-main\\\\src\\\\Components\\\\Organisms\\\\CardList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Card from \"../../Molecules/EventListItem\";\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function List(props) {\n  _s();\n\n  const filteredData = useSelector(state => state.lists.listeler);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: {\n      xs: 2,\n      md: 3\n    },\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    },\n    children: [filteredData.length > 0 ? filteredData.map(filteredData => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      sm: 4,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        vals: props.vals,\n        texti: \"aliveli\",\n        eventData: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)) : null, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"r9VaBviyml9JybD1JS8Vasz7Iw4=\", false, function () {\n  return [useSelector];\n});\n\n_c = List;\nList.propTypes = {\n  title: PropTypes.string.isRequired,\n  eventDataList: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n  }))\n};\nList.defaultProps = {};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Sym/Desktop/folders/mobile/ReduxHooksAtomic-main/ReduxHooksAtomic-main/src/Components/Organisms/CardList/index.js"],"names":["React","useSelector","PropTypes","Card","Grid","List","props","filteredData","state","lists","listeler","xs","md","sm","length","map","vals","propTypes","title","string","isRequired","eventDataList","arrayOf","shape","date","type","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAIA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAE1B,QAAMC,YAAY,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QAAxB,CAAhC;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KAAzB;AAA2C,IAAA,OAAO,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,EAAE,EAAE,CAAb;AAAgBD,MAAAA,EAAE,EAAE;AAApB,KAApD;AAAA,eAEGL,YAAY,CAACO,MAAb,GAAsB,CAAtB,GAA0BP,YAAY,CAACQ,GAAb,CAAkBR,YAAD,iBAE1C,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED,KAAK,CAACU,IAAlB;AAAwB,QAAA,KAAK,EAAE,SAA/B;AAA0C,QAAA,SAAS,EAAET;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFyB,CAA1B,GAKE,IAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAbeF,I;UAEOJ,W;;;KAFPI,I;AAchBA,IAAI,CAACY,SAAL,GAAiB;AACfC,EAAAA,KAAK,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC,UADT;AAEfC,EAAAA,aAAa,EAAEnB,SAAS,CAACoB,OAAV,CACbpB,SAAS,CAACqB,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEtB,SAAS,CAACiB,MAAV,CAAiBC,UADT;AAEdF,IAAAA,KAAK,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC,UAFV;AAGdK,IAAAA,IAAI,EAAEvB,SAAS,CAACiB,MAAV,CAAiBC;AAHT,GAAhB,CADa;AAFA,CAAjB;AAWAf,IAAI,CAACqB,YAAL,GAAoB,EAApB;AAGA,eAAerB,IAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../../Molecules/EventListItem\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n\r\nexport function List(props) {\r\n\r\n  const filteredData = useSelector((state) => state.lists.listeler)\r\n  return (\r\n    <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n     \r\n      {filteredData.length > 0 ? filteredData.map((filteredData) => (\r\n\r\n        <Grid item xs={2} sm={4} md={4} >\r\n          <Card vals={props.vals} texti={\"aliveli\"} eventData={filteredData} />\r\n        </Grid>\r\n      )):null} </Grid>\r\n  )\r\n}\r\nList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  eventDataList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      date: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nList.defaultProps = {};\r\n\r\n\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}