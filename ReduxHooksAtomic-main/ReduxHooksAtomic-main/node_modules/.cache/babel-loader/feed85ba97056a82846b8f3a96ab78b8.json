{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sym\\\\Desktop\\\\folders\\\\mobile\\\\ReduxHooksAtomic-main\\\\ReduxHooksAtomic-main\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\nimport reportWebVitals from './reportWebVitals';\nimport reducers from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { Provider } from 'react-redux';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n\n};\nconst pReducer = persistReducer(persistConfig, reducers);\nconst store = createStore(pReducer, applyMiddleware(thunk));\nexport const persistor = persistStore(store);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/Sym/Desktop/folders/mobile/ReduxHooksAtomic-main/ReduxHooksAtomic-main/src/index.js"],"names":["React","ReactDOM","App","thunk","reportWebVitals","reducers","persistStore","persistReducer","createStore","applyMiddleware","storage","autoMergeLevel2","Provider","persistConfig","key","stateReconciler","pReducer","store","persistor","render","document","getElementById"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,kCAAP;;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA,OAAO,EAAEA,OAFW;AAGpBK,EAAAA,eAAe,EAAEJ,eAHG,CAGa;;AAHb,CAAtB;AAKA,MAAMK,QAAQ,GAAGT,cAAc,CAACM,aAAD,EAAgBR,QAAhB,CAA/B;AACA,MAAMY,KAAK,GAAGT,WAAW,CAACQ,QAAD,EAAWP,eAAe,CAACN,KAAD,CAA1B,CAAzB;AAEA,OAAO,MAAMe,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEPhB,QAAQ,CAACkB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA,yBACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AASAjB,eAAe","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk';\n\nimport reportWebVitals from './reportWebVitals';\nimport reducers from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { createStore, applyMiddleware } from 'redux';\nimport storage from 'redux-persist/lib/storage';\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { Provider } from 'react-redux'\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n };\nconst pReducer = persistReducer(persistConfig, reducers);\nconst store = createStore(pReducer, applyMiddleware(thunk));\n\nexport const persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}